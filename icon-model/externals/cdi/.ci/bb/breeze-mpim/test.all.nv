#!/bin/bash

set -eu
set -o pipefail

script_dir=$(cd "$(dirname "$0")"; pwd)
top_srcdir=$(cd "${script_dir}/../../.."; pwd)

. "${script_dir}/init.sh"
init_nvhpc

enable_maintainer_mode='no'
if test ! -f "${top_srcdir}/configure"; then
  # If there is no configure script, there are, most probably, no Fortran
  # interface files, which are generated in the maintainer mode only:
  enable_maintainer_mode='yes'
fi

# We want to check with the Debian version of Libtool, which is patched to avoid
# overlinking:
( init_debian_libtool; "${top_srcdir}/autogen.sh" )

"${top_srcdir}/configure" \
--enable-cf-interface \
--enable-iso-c-interface \
--enable-maintainer-mode="${enable_maintainer_mode}" \
--enable-mpi \
--enable-option-checking=fatal \
--enable-ppm-dist-array \
--with-eccodes="${ECCODES_ROOT}" \
--with-netcdf="${NETCDF_ROOT}" \
CC="${MPICC}" \
FC="${MPIFC}" \
MPI_LAUNCH="${MPI_LAUNCH}" \
PKG_CONFIG_PATH="${YAXT_ROOT}/lib/pkgconfig:${PPM_ROOT}/lib/pkgconfig"

make -j8

# Check that an executable is not overlinked to libscalesppmcore.so:
tested_file='examples/pio/collectData.parallel'
tested_dir=$(dirname "${tested_file}")

rm -f "${tested_file}" && make -C "${tested_dir}" AM_CFLAGS=-shared
tested_file="${tested_dir}/.libs/$(basename "${tested_file}")"

invalid_needed=`readelf -d "${tested_file}" | sed -E -n '/\(NEEDED\).*libscalesppmcore\.so/p'` || {
  echo "ERROR: failed to check '${tested_file}' for ELF NEEDED entries" >&2
  exit 1
}
if test -n "${invalid_needed}"; then
  {
    echo "ERROR: '${tested_file}' has excessive ELF NEEDED entries:" >&2
    echo "${invalid_needed}" >&2
  } >&2
  exit 1
fi

make -j8 check || { cat tests/test-suite.log; exit 1; }

check_all_tests_passed tests/test-suite.log

check_no_git_untracked
