#!/bin/bash

set -eu
set -o pipefail

script_dir=$(cd "$(dirname "$0")"; pwd)
top_srcdir=$(cd "${script_dir}/../../.."; pwd)

. "${script_dir}/init.sh"
init_intelclassic

enable_maintainer_mode='no'
if test ! -f "${top_srcdir}/configure"; then
  "${top_srcdir}/autogen.sh"
  # If there is no configure script, there are, most probably, no Fortran
  # interface files, which are generated in the maintainer mode only:
  enable_maintainer_mode='yes'
fi

# Create a subdirectory for building and switch to it:
mkdir build && cd build

# The configure script does not check the 'lib64' subdirectory, therefore we
# run it with '--with-eccodes' and the following flags. Note that fixing this
# in the configure script might be tricky: the 'lib64' subdirectory should be
# checked first but if it does not exist or does not contain the library, we
# might end up linking to a library from the linker's default search path
# (e.g. /usr/lib) instead of the one from "$with_eccodes/lib" because
# "-L${with_eccodes}/lib64" would be ignored in that case:
CPPFLAGS="-I${ECCODES_ROOT}/include"
LDFLAGS="-L${ECCODES_ROOT}/lib64"

"${top_srcdir}/configure" \
--enable-cf-interface \
--enable-iso-c-interface \
--enable-maintainer-mode="${enable_maintainer_mode}" \
--enable-mpi \
--enable-option-checking=fatal \
--with-eccodes \
--with-netcdf="${NETCDF_ROOT}" \
CC="${MPICC}" \
CPPFLAGS="${CPPFLAGS}" \
F77="${MPIFC}" \
FC="${MPIFC}" \
LDFLAGS="${LDFLAGS}" \
MPI_LAUNCH="${MPI_LAUNCH}" \
PKG_CONFIG_PATH="${YAXT_ROOT}/lib/pkgconfig:${PPM_ROOT}/lib/pkgconfig"

# Check whether the configure script removed the '.libs' directory:
test -e .libs && echo "ERROR: the configure script did not remove directory '.libs'" && exit 1

make

make check || { cat tests/test-suite.log; exit 1; }

check_all_tests_passed tests/test-suite.log

if test "x${enable_maintainer_mode}" = 'xyes'; then
  make maintainer-clean
else
  make distclean
fi

check_no_files_in_cwd

cd "${top_srcdir}" && check_no_git_untracked
